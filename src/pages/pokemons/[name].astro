---
import type { GetStaticPaths } from "astro";
import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemons/pokemonCard.astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";
import Title from "@components/shared/Title.astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async() => {
     const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
     const {results} = await resp.json() as PokemonListResponse;
     
     return results.map( ({name, url}) => ({
          params: {name: name},
          props: {name, url},
     }) )
}) satisfies GetStaticPaths;

const {name} = Astro.params;
const {url} = Astro.props;
const id = url.split("/").at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`
---
<MainLayout title ={`Pokémon - #${id} ${name}`}
     description ={`Información sobre el Pokémon ${name}`}
     image = {imageSrc}
     >
     <section class="mt-10 mx-10 flex flex-col justify-center items-center">
     <div class="flex flex-row">
          <div>
               <button 
                    onclick="history.back()"
                    class="text-blue-300">Regresar
               </button>
                    <Title>{name}</Title>
          </div>

          <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
               <Icon name="heartfill" size={50} />
               <Icon class="hidden" name="heartfull" size={50} />
          </button>
     </div>
     <PokemonCard name={name} url={url} isBig={true}/>
     <audio controls class="mt-5">
          <source src={audioSrc} type="audio/ogg"/>
          Tu navegador no soporta el elemento de audio.
     </audio>
     </section>
</MainLayout>

<script>
     interface FavoritePokemon {
          name: string;
          id: number;
     }

     document.addEventListener("astro:page-load",()=>{
          const btnFavorite = document.querySelector
          ("#btn-favorite") as HTMLButtonElement;

     if (!btnFavorite) return; 

          const name = btnFavorite.dataset.name;
          const id = btnFavorite.dataset.id;

               btnFavorite.addEventListener("click", ()=>{
                    console.log({name, id});
               })   
     })

</script>

<style>
     a{
          @apply hover:underline text-blue-400;
     }
     #btn-favorite{
          @apply hover:animate-pulse 
     }
</style>